/*
* ==========================================================================
* File : _mixins.scss
* For : Inputs 
* ==========================================================================
*/

$margin: em(map-get($inputs-element, margin));
$margin-label: em(map-get($inputs-label, margin));

@mixin input() {
	padding: em(map-get($inputs-element, padding));
	margin: $margin;
	border: map-get($inputs-element, border);
	border-color: map-deep-get($inputs-element, border-color, base);
	background: map-deep-get($inputs-element, background, base);
	box-shadow: map-get($inputs-shadows, normal);
	border-radius: em(map-get($inputs-element, border-radius));
	transition: map-get($inputs-transitions, blur-shadow), map-get($inputs-transitions, blur-border-color);
	font-size: em(map-get($inputs-element, font-size));
	width: map-get($inputs-element, width);

	&:focus,
	&.focus {
		@include input-focus();
	}

	&:disabled,
	&.disabled {
		@include input-disabled();
	}

	&:active,
	&.active {
		@include input-active();
	}

	&.error {
		@include input-error();
	}
}

/* Input States */

@mixin input-focus() {
	border-color: map-deep-get($inputs-focus, border-color, light);
	transition: map-get($inputs-transitions, focus-shadow), map-get($inputs-transitions, focus-border-color);
	outline: map-get($inputs-focus, outline);
	box-shadow: map-get($inputs-shadows, focus-base), map-get($inputs-shadows, focus-spread);
}

@mixin input-disabled() {
	background: map-deep-get($inputs-disabled, background, base);
	box-shadow: map-get($inputs-shadows, disabled);
	border-color: map-deep-get($inputs-disabled, border-color, darker);
	color: map-deep-get($inputs-disabled, color, darker);
	cursor: map-get($inputs-disabled, cursor);
}

@mixin input-active() {
	border-color: map-deep-get($inputs-active, border-color, light);
}

@mixin input-error() {
	border-color: map-deep-get($inputs-error, border-color, base);
	box-shadow: map-get($inputs-shadows, error-base), map-get($inputs-shadows, error-spread);
	background: rgba(map-deep-get($inputs-error, background, base), .08);
}

@mixin input-label() {
	display: map-get($inputs-label, display);
	max-width: map-get($inputs-label, max-width);
	font-size: em(map-get($inputs-label, font-size));
	font-weight: map-get($inputs-label, font-weight);
	margin: $margin-label 0;

	&.error {
		font-size: em(map-get($inputs-label-error, font-size));
		color: map-deep-get($inputs-label-error, color, base);
		font-weight: map-get($inputs-label-error, font-weight);
	}
}

/* Input Sizes */

@mixin input-lg() {
	font-size: em(map-get($inputs-lg, font-size));
}

@mixin input-sm() {
	font-size: em(map-get($inputs-sm, font-size));
}

/* Radio Buttons */

$radio-default-border: map-deep-get($inputs-radiobutton, default-color, base);
$radio-checked-border: map-deep-get($inputs-radiobutton, checked-color, base);

@mixin radiobutton() {
	opacity: 0;
	position: absolute;

	&-label {
		display: inline-block;
		vertical-align: middle;
		margin: 5px;
		cursor: pointer;
		position: relative;
	}

	& + &-label:before {
		content: "";
		display: inline-block;
		vertical-align: middle;
		width: map-get($inputs-radiobutton, width);
		height: map-get($inputs-radiobutton, height);
		box-shadow: 0 2px 2px 0 rgba(0,0,0,.24), inset 0 0 0 1px $radio-default-border;
		padding: 2px;
		margin-right: 10px;
		text-align: center;
		transition: box-shadow .1s;
		border-radius: 50%;
	}

	&:checked + &-label:before {
		box-shadow: 0 2px 2px 0 rgba(0,0,0,.24), inset 0 0 0 7px $radio-checked-border;
		transition: box-shadow .2s;
	}
}

/* Checkboxes */

$checkbox-default-border: map-deep-get($inputs-checkbox, default-color, base);
$checkbox-checked-border: map-deep-get($inputs-checkbox, checked-color, base);

@mixin checkbox() {
	opacity: 0;
	position: absolute;

	&-label {
		display: inline-block;
		vertical-align: middle;
		margin: 5px;
		cursor: pointer;
		position: relative;
	}

	& + &-label:before {
		content: "";
		display: inline-block;
		vertical-align: middle;
		width: map-get($inputs-checkbox, width);
		height: map-get($inputs-checkbox, height);
		box-shadow: 0 2px 2px 0 rgba(0,0,0,.24);
		padding: 2px;
		border: 1px solid $checkbox-default-border;
		margin-right: 10px;
		text-align: center;
		border-radius: 3px;
		transition: background-color .1s;
	}

	& + &-label:after {
		content: "";
		width: 12px;
		height: 6px;
		position: absolute;
		top: 9px;
		left: 6px;
		border: 3px solid #fff;
		border-top: none;
		border-right: none;
		background: transparent;
		opacity: 0;
		transform: rotate(-65deg);
	}

	&:checked + &-label:before {
		background: $checkbox-checked-border;
		border-color: $checkbox-checked-border;
		transition: background-color .1s;
	}

	&:checked + &-label:after {
		opacity: 1;
		transform: rotate(-45deg);
		transition: transform .1s;
	}
}
